<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MatrixMan&#39;s blog</title>
  
  
  <link href="https://blog.codingfxxker.club/atom.xml" rel="self"/>
  
  <link href="https://blog.codingfxxker.club/"/>
  <updated>2021-07-05T16:51:21.650Z</updated>
  <id>https://blog.codingfxxker.club/</id>
  
  <author>
    <name>CodingFucker</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>零基础快速搭建公开数据集python爬虫</title>
    <link href="https://blog.codingfxxker.club/2021/07/05/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E9%9B%86python%E7%88%AC%E8%99%AB/"/>
    <id>https://blog.codingfxxker.club/2021/07/05/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E9%9B%86python%E7%88%AC%E8%99%AB/</id>
    <published>2021-07-05T12:13:45.000Z</published>
    <updated>2021-07-05T16:51:21.650Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/myblog/2021/07/05/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E9%9B%86python%E7%88%AC%E8%99%AB/%E7%88%AC%E8%99%AB.jpg"></p><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>最近接到老板任务，需要重新下载前段时间下过的一个数据集。这个数据集网站有多反人类呢？我们前段时间两个人断断续续点了三天才下载完。原因是数据集本身是多条的，如果点击合并下载， 系统后台会先把所有的数据压缩成一个文件，再给你这个压缩包的下载链接。一次打包数量稍微多一点点就会打包失败， 即使成功了， 打包的时间爆炸长。一共几千条数据， 大概每次只能点二三十个， 要经历打包-下载-解压-归类， 还得和下一批数据起始位置衔接好， 还要两个人分工好。 第一次下载这个数据集的时候我都快吐了。身为一个具有hacker精神的人， 我不容许自己再这么蠢。 好奇心的驱使下， 花了4个小时零基础终于完成了爬虫代码， 优化了2个人3天的耗时。</p><p><img src="/myblog/2021/07/05/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E9%9B%86python%E7%88%AC%E8%99%AB/%E6%A0%B7%E4%BE%8B1.jpg" alt="几千条数据需要分段勾选" title="几千条数据需要分段勾选"></p><center>几千条数据需要分段勾选</center><p><img src="/myblog/2021/07/05/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E9%9B%86python%E7%88%AC%E8%99%AB/%E6%A0%B7%E4%BE%8B2.png" alt="这里就点了十几个，半分钟了打包进度还是0%" title="这里就点了十几个，半分钟了打包进度还是0%"></p><center>这里就点了十几个，半分钟了打包进度还是0%</center><h3 id="问题初探"><a href="#问题初探" class="headerlink" title="问题初探"></a>问题初探</h3><p>首先经尝试发现， 每条数据单独下载是非常快的， 因为不用网站后台打包。那么很自然而然的思路就是， 如果能爬到每条数据背后的下载链接， 再依次下载， 便大功告成。 幸运的是， 笔者之前了解过浏览器(比如Windows Edge)一般都有一个开发者模式, 直觉告诉我, 右键点击每条数据链接，一定会有发现。经过尝试，右键点击检查，会直接定位到html文本(html 简单来说就是定义了整个网页布局)对应位置</p><p><img src="/myblog/2021/07/05/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E9%9B%86python%E7%88%AC%E8%99%AB/%E5%8F%B3%E9%94%AE.jpg" alt="下载链接右键菜单" title="下载链接右键菜单"></p><center>下载链接右键菜单</center>  <p><img src="/myblog/2021/07/05/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E9%9B%86python%E7%88%AC%E8%99%AB/html.jpg" alt="左边是页面中某条数据， 右边是查到的对应html代码块" title="左边是页面中某条数据， 右边是查到的对应html代码块"></p><center>左边是页面中某条数据， 右边是查到的对应html代码块</center>    <br>接下来只需要爬取整个html文本到本地再解析即可。 这里其实遇到一个小问题，下载页面是下拉扩展式的，也就是必须鼠标拉到底，才能获取后面的数据。经过查阅得知， 这是分页式页面，需要爬虫模拟鼠标下拉，解决方案是有， 但我选择直接手动下拉到底，因此浏览器元素审查模块中加载了全部信息，直接复制到本地即可。<h3 id="问题再探"><a href="#问题再探" class="headerlink" title="问题再探"></a>问题再探</h3><p>下面要进行html解析，首先要知道，html 和 xml 类似, 都具有树形结构。 经过观察，所有的下载链接均在</p><pre><code class="html">&lt;li&gt;&lt;a class="op download" href="/xxxxx?dl=1"&gt;下载&lt;/a&gt;&lt;/li&gt;</code></pre><p>这样式的href里。解析代码如下:</p><pre><code class="python">from bs4 import BeautifulSoupwith open('raw.html', encoding='utf-8') as f:        soup = BeautifulSoup(f,'html.parser')    l = soup.find_all(name='a', attrs={'class':'op download'}) # 递归全文搜索 从叫a的结构体中找属性为 op download</code></pre><p>这里使用 BeautifulSoup4 解析库， l 返回的是所有下载链接的href所组成的列表。</p><p>根据href尝试爬取(代码隐去关键信息)</p><pre><code class="python">import requestimport tqdmfor item in tqdm.tqdm(l):    dladdress = "某域名" + item['href'] # href 路径为数据库后台相对路径, 我们外网访问需要加公网域名    source = requests.get(url=dladdress, verify=False)</code></pre><p>返回</p><pre><code>b'\n\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang="en"&gt;\n&lt;head&gt;\n&lt;title&gt;Log In - Private Seafile&lt;/title&gt;\n&lt;meta http-equiv="Content-type" content="text/html; charset=utf-8" /&gt;\n&lt;meta name="keywords" content="File Collaboration Team Organization" /&gt;\n\n&lt;meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" /&gt;\n\n&lt;meta http-equiv="x-ua-compatible" content="ie=edge" /&gt;\n&lt;link rel="shortcut icon" href="/media/custom/favicon.ico" /&gt;\n&lt;link rel="stylesheet" type="text/css" href="/media/assets/css/bootstrap.min.b00faad199b5.css"/&gt;\n&lt;link rel="stylesheet" type="text/css" href="/media/css/jstree_default_theme/style.min.css" /&gt;\n&lt;link rel="stylesheet" type="text/css" href="/media/assets/css/magnific-popup.656241b2c8ed.css" /&gt;\n&lt;link rel="stylesheet" type="text/css" href="/media/css/seahub.min.css?t=1516678381" /&gt;\n\n&lt;style type="text/css"&gt;\nhtml, body, #wrapper { height:100%; }\n#wrapper {\n    background: url(\'/media/custom/login-bg.jpg\') center top no-repeat scroll;\n    background-size: cover;\n    padding-top:1px;\n}\n#main {\n    min-height:0;\n}\n#lang {\n    margin:0;\n}\n#lang-context {\n    font-weight:normal;\n}\n#lang-context-selector {\n    text-align:left;\n}\n&lt;/style&gt;\n\n\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div id="wrapper" class="en"&gt;\n        \n        \n        \n\n        &lt;div id="header" class="navbar hide"&gt;\n            &lt;div id="header-inner"&gt;\n                \n                &lt;a href="/" id="logo" class="fleft"&gt;\n                    \n                    &lt;img src="/media/custom/mylogo.png" title="Private Seafile" alt="logo" width="244" height="32" /&gt;\n                    \n                &lt;/a&gt;\n                &lt;button class="sf2-icon-list-view side-nav-toggle hidden-md-up hide" title="Side Nav Menu" id="js-toggle-side-nav" aria-label="Side Nav Menu"&gt;&lt;/button&gt;\n\n                \n                 \n                &lt;div class="fright" id="lang"&gt;\n                    &lt;a href="#" id="lang-context" data-lang="en"&gt;English &lt;span class="icon-caret-down"&gt;&lt;/span&gt;&lt;/a&gt;\n                    &lt;div id="lang-context-selector" class="sf-popover hide"&gt;\n                        &lt;ul class="sf-popover-con"&gt;\n                            \n                            &lt;li&gt;&lt;a href="/i18n/?lang=en"&gt;English&lt;/a&gt;&lt;/li&gt;\n                            \n                            &lt;li&gt;&lt;a href="/i18n/?lang=zh-cn"&gt;\xe7\xae\x80\xe4\xbd\x93\xe4\xb8\xad\xe6\x96\x87&lt;/a&gt;&lt;/li&gt;\n                            \n                        &lt;/ul&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                \n                \n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div id="main" class="clear container-fluid "&gt;\n            \n&lt;div class="login-panel-outer-container vh"&gt;\n&lt;div class="login-panel"&gt;\n    &lt;h1 class="login-panel-hd"&gt;Log In&lt;/h1&gt;\n    &lt;form action="" method="post" onsubmit="return check()"&gt;&lt;input type=\'hidden\' name=\'csrfmiddlewaretoken\' value=\'C75XMAtbeRg9m2r4emT46uLhV4oYW8vE\' /&gt;\n        &lt;input type="text" name="login" placeholder="Email or Username" aria-label="Email or Username" title="Email or Username" value="" class="input name-input" /&gt;&lt;br /&gt;\n        &lt;input type="password" name="password" placeholder="Password" aria-label="Password" title="Password" value="" class="input passwd-input" autocomplete="off" /&gt;\n\n        \n\n        &lt;input type="hidden" name="next" value="/lib/a37c012b-31cb-416b-b3e2-80589b19b3ff/file/L/hyper/053065_2-20x-roi6.raw?dl=1" /&gt;\n        \n        &lt;p class="error hide"&gt;&lt;/p&gt;\n        \n\n        &lt;label class="checkbox-label remember"&gt;\n            &lt;input type="checkbox" name="remember_me" class="vam remember-input" /&gt;\n            &lt;span class="vam"&gt;Remember me for 7 days &lt;/span&gt;\n        &lt;/label&gt;\n        &lt;a href="/accounts/password/reset/" class="normal forgot-passwd"&gt;Forgot password?&lt;/a&gt;\n\n        &lt;button type="submit" class="submit"&gt;Log In&lt;/button&gt;\n    &lt;/form&gt;\n\n    \n\n    \n\n    \n\n    \n\n    &lt;div class="login-panel-bottom-container"&gt;\n        \n        &lt;a href="/accounts/register/" class="normal fleft" id="sign-up"&gt;Signup&lt;/a&gt;\n        \n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n\n\n            \n            &lt;div id="confirm-popup" class="hide"&gt;\n                &lt;div id="confirm-con"&gt;&lt;/div&gt;\n                &lt;button id="confirm-yes"&gt;Yes&lt;/button&gt;\n                &lt;button class="simplemodal-close"&gt;No&lt;/button&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n&lt;/div&gt;&lt;!-- wrapper --&gt;\n\n&lt;script type="text/javascript" src="/media/js/jquery-1.12.1.min.js" id="jquery"&gt;&lt;/script&gt;\n&lt;script type="text/javascript" src="/media/assets/scripts/lib/jquery.simplemodal.67fb20a63282.js"&gt;&lt;/script&gt;\n&lt;script type="text/javascript" src="/media/assets/scripts/lib/jquery.ui.tabs.7406a3c5d2e3.js"&gt;&lt;/script&gt;\n&lt;script type="text/javascript" src="/media/assets/scripts/lib/jstree.min.baba5642f663.js"&gt;&lt;/script&gt;\n&lt;script type="text/javascript" src="/media/js/jq.min.js"&gt;&lt;/script&gt;\n&lt;script type="text/javascript" src="/media/js/base.js?t=1516678381"&gt;&lt;/script&gt;\n&lt;script type="text/javascript"&gt;\nfunction ajaxErrorHandler(xhr, textStatus, errorThrown) {\n    if (xhr.responseText) {\n        feedback($.parseJSON(xhr.responseText).error||$.parseJSON(xhr.responseText).error_msg, \'error\');\n    } else {\n        feedback("Failed. Please check the network.", \'error\');\n    }\n}\n \n(function() {\n    var lang_context = $(\'#lang-context\'),\n        lang_selector = $(\'#lang-context-selector\');\n\n    lang_context.parent().css({\'position\':\'relative\'});\n\n    if ($(\'#header\').is(\':visible\')) { // for login page\n        lang_selector.css({\n            \'top\': lang_context.position().top + lang_context.height() + 5,\n            \'right\': 0\n        });\n    }\n\n    var setLangSelectorMaxHeight = function() {\n        if ($(\'#header\').is(\':visible\')) { // for login page\n            $(\'.sf-popover-con\', lang_selector).css({\n                \'max-height\': $(window).height() - lang_selector.offset().top - 12\n            });\n        }\n    };\n    $(window).resize(function() {\n        if (lang_selector.is(\':visible\')) {\n            setLangSelectorMaxHeight();\n        }\n    });\n\n    lang_context.click(function() {\n        lang_selector.toggleClass(\'hide\');\n        if (lang_selector.is(\':visible\')) {\n            setLangSelectorMaxHeight();\n        }\n        return false;\n    });\n\n    $(document).click(function(e) {\n        var element = e.target || e.srcElement;\n        if (element.id != \'lang-context-selector\' &amp;&amp; element.id != \'lang-context\') {\n            lang_selector.addClass(\'hide\');\n        }\n    });\n})();\n\n\nif ($(\'.side-nav\').length) {\n    $(\'#logo\').addClass(\'hidden-sm-down\');\n    $(\'#js-toggle-side-nav\').removeClass(\'hide\');\n}\n$(\'#js-toggle-side-nav\').click(function() {\n    $(\'.side-nav\').css({\'left\': 0});\n    return false;\n});\n$(\'.js-close-side-nav\').click(function() {\n    $(\'.side-nav\').css({\'left\': \'-300px\'});\n    return false;\n});\n$(window).resize(function() {\n    if ($(window).width() &gt;= 768) {\n        $(\'.side-nav\').css({\'left\': 0});\n    }\n});\n&lt;/script&gt;\n\n&lt;script src="../../media/js/crypto-js.js"&gt;&lt;/script&gt;\n&lt;!--&lt;script src="../../media/js/md5.js"&gt;&lt;/script&gt;--&gt;\n&lt;!--&lt;script type="text/javascript" src="http://www.osctools.net/js/CryptoJS/components/core-min.js"&gt;&lt;/script&gt;--&gt;\n&lt;!--&lt;script type="text/javascript" src="http://www.osctools.net/js/CryptoJS/rollups/md5.js"&gt;&lt;/script&gt;--&gt;\n&lt;script type="text/javascript"&gt;\n// $(\'.login-panel-outer-container\').prepend($($(\'#logo\').html()).attr({\'width\': 160, \'height\':40}).addClass(\'login-panel-logo\'));\n$(\'.login-panel-bottom-container\').append($(\'#lang\').removeClass(\'fright\'));\n\nvar $el = $(\'.login-panel-outer-container\');\nvar elHeight = $el.outerHeight();\nvar wdHeight = $(window).height();\nif (wdHeight &gt; elHeight) {\n    $el.css({\'margin-top\': (wdHeight - elHeight)/2});\n}\n$(\'#lang\').css({\'margin-left\': $(\'#sign-up\').outerWidth() + 10});\n$el.removeClass(\'vh\');\n\n$(\'#lang-context-selector\').css({\n    \'top\': \'-\' + ($(\'#lang\').offset().top - 5) + \'px\',\n    \'right\': 0\n});\n$(\'#lang-context-selector .sf-popover-con\').css({\n    \'max-height\': $(\'#lang\').offset().top - 10\n});\n\n$(\'[name="login"]\').focus();\n\n//my function\nfunction check(){\nconst key = CryptoJS.enc.Utf8.parse("1234123412ABCDEF"); \nconst iv = CryptoJS.enc.Utf8.parse(\'ABCDEF1234123412\'); \nvar password=$(\'input[name="password"]\').val();\nlet srcs = CryptoJS.enc.Utf8.parse(password);\nlet encrypted = CryptoJS.AES.encrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\nvar newpass=encrypted.ciphertext.toString().toUpperCase();\n//var newpass="12121212";\n//$("#password").val(password);\n//$(\'input[type="password"]\').attr(\'value\',password);\n$(\'input[name="password"]\').val(newpass);\n//$(\'input[name="password"]\').attr(\'value\',password);\nreturn true;\n}\n\nfunction setCaptchaInputWidth() {\n    $(\'#id_captcha_1\').outerWidth($(\'.input\').outerWidth() - $(\'.captcha\').width() - $(\'#refresh-captcha\').outerWidth(true) - 10);\n}\n$(window).load(setCaptchaInputWidth);\n$(\'.captcha\').load(setCaptchaInputWidth);\n$(\'#refresh-captcha\').click(function() {\n    $.ajax({\n        url: \'/captcha/refresh/\',\n        dataType:\'json\',\n        cache:false,\n        success: function(data) {\n            $(\'.captcha\').attr(\'src\', data[\'image_url\']);\n            $(\'#id_captcha_0\').val(data[\'key\']);\n        },\n        error: function() {\n            $(\'.error\').removeClass(\'hide\').html("Failed to refresh the CAPTCHA, please try again later.");\n        }\n    });\n    return false;\n});\n\n$(\'input[type="submit"]\').click(function(){\n    if (!$.trim($(\'input[name="login"]\').val())) {\n        $(\'.error\').removeClass(\'hide\').html("Email or username cannot be blank");\n        return false;\n    }\n    if (!$.trim($(\'input[name="password"]\').val())) {\n        $(\'.error\').removeClass(\'hide\').html("Password cannot be blank");\n        return false;\n    }\n});\n// set tabindex\n$(function() {\n    $(\'input:not([type="hidden"])\').each(function(index) {\n        $(this).attr(\'tabindex\', index + 1);\n    });\n});\n\n\n\n\n\n\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n'Code Formats for Web Development - Open Social Communication Toolsb'\n\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang="en"&gt;\n&lt;head&gt;\n&lt;title&gt;Log In - Private Seafile&lt;/title&gt;\n&lt;meta http-equiv="Content-type" content="text/html; charset=utf-8" /&gt;\n&lt;meta name="keywords" content="File Collaboration Team Organization" /&gt;\n\n&lt;meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" /&gt;\n\n&lt;meta http-equiv="x-ua-compatible" content="ie=edge" /&gt;\n&lt;link rel="shortcut icon" href="/media/custom/favicon.ico" /&gt;\n&lt;link rel="stylesheet" type="text/css" href="/media/assets/css/bootstrap.min.b00faad199b5.css"/&gt;\n&lt;link rel="stylesheet" type="text/css" href="/media/css/jstree_default_theme/style.min.css" /&gt;\n&lt;link rel="stylesheet" type="text/css" href="/media/assets/css/magnific-popup.656241b2c8ed.css" /&gt;\n&lt;link rel="stylesheet" type="text/css" href="/media/css/seahub.min.css?t=1516678381" /&gt;\n\n&lt;style type="text/css"&gt;\nhtml, body, #wrapper { height:100%; }\n#wrapper {\n    background: url(\'/media/custom/login-bg.jpg\') center top no-repeat scroll;\n    background-size: cover;\n    padding-top:1px;\n}\n#main {\n    min-height:0;\n}\n#lang {\n    margin:0;\n}\n#lang-context {\n    font-weight:normal;\n}\n#lang-context-selector {\n    text-align:left;\n}\n&lt;/style&gt;\n\n\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div id="wrapper" class="en"&gt;\n        \n        \n        \n\n        &lt;div id="header" class="navbar hide"&gt;\n            &lt;div id="header-inner"&gt;\n                \n                &lt;a href="/" id="logo" class="fleft"&gt;\n                    \n                    &lt;img src="/media/custom/mylogo.png" title="Private Seafile" alt="logo" width="244" height="32" /&gt;\n                    \n                &lt;/a&gt;\n                &lt;button class="sf2-icon-list-view side-nav-toggle hidden-md-up hide" title="Side Nav Menu" id="js-toggle-side-nav" aria-label="Side Nav Menu"&gt;&lt;/button&gt;\n\n                \n                 \n                &lt;div class="fright" id="lang"&gt;\n                    &lt;a href="#" id="lang-context" data-lang="en"&gt;English &lt;span class="icon-caret-down"&gt;&lt;/span&gt;&lt;/a&gt;\n                    &lt;div id="lang-context-selector" class="sf-popover hide"&gt;\n                        &lt;ul class="sf-popover-con"&gt;\n                            \n                            &lt;li&gt;&lt;a href="/i18n/?lang=en"&gt;English&lt;/a&gt;&lt;/li&gt;\n                            \n                            &lt;li&gt;&lt;a href="/i18n/?lang=zh-cn"&gt;\xe7\xae\x80\xe4\xbd\x93\xe4\xb8\xad\xe6\x96\x87&lt;/a&gt;&lt;/li&gt;\n                            \n                        &lt;/ul&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                \n                \n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div id="main" class="clear container-fluid "&gt;\n            \n&lt;div class="login-panel-outer-container vh"&gt;\n&lt;div class="login-panel"&gt;\n    &lt;h1 class="login-panel-hd"&gt;Log In&lt;/h1&gt;\n    &lt;form action="" method="post" onsubmit="return check()"&gt;&lt;input type=\'hidden\' name=\'csrfmiddlewaretoken\' value=\'C75XMAtbeRg9m2r4emT46uLhV4oYW8vE\' /&gt;\n        &lt;input type="text" name="login" placeholder="Email or Username" aria-label="Email or Username" title="Email or Username" value="" class="input name-input" /&gt;&lt;br /&gt;\n        &lt;input type="password" name="password" placeholder="Password" aria-label="Password" title="Password" value="" class="input passwd-input" autocomplete="off" /&gt;\n\n        \n\n        &lt;input type="hidden" name="next" value="/lib/a37c012b-31cb-416b-b3e2-80589b19b3ff/file/L/hyper/053065_2-20x-roi6.raw?dl=1" /&gt;\n        \n        &lt;p class="error hide"&gt;&lt;/p&gt;\n        \n\n        &lt;label class="checkbox-label remember"&gt;\n            &lt;input type="checkbox" name="remember_me" class="vam remember-input" /&gt;\n            &lt;span class="vam"&gt;Remember me for 7 days &lt;/span&gt;\n        &lt;/label&gt;\n        &lt;a href="/accounts/password/reset/" class="normal forgot-passwd"&gt;Forgot password?&lt;/a&gt;\n\n        &lt;button type="submit" class="submit"&gt;Log In&lt;/button&gt;\n    &lt;/form&gt;\n\n    \n\n    \n\n    \n\n    \n\n    &lt;div class="login-panel-bottom-container"&gt;\n        \n        &lt;a href="/accounts/register/" class="normal fleft" id="sign-up"&gt;Signup&lt;/a&gt;\n        \n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n\n\n            \n            &lt;div id="confirm-popup" class="hide"&gt;\n                &lt;div id="confirm-con"&gt;&lt;/div&gt;\n                &lt;button id="confirm-yes"&gt;Yes&lt;/button&gt;\n                &lt;button class="simplemodal-close"&gt;No&lt;/button&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n&lt;/div&gt;&lt;!-- wrapper --&gt;\n\n&lt;script type="text/javascript" src="/media/js/jquery-1.12.1.min.js" id="jquery"&gt;&lt;/script&gt;\n&lt;script type="text/javascript" src="/media/assets/scripts/lib/jquery.simplemodal.67fb20a63282.js"&gt;&lt;/script&gt;\n&lt;script type="text/javascript" src="/media/assets/scripts/lib/jquery.ui.tabs.7406a3c5d2e3.js"&gt;&lt;/script&gt;\n&lt;script type="text/javascript" src="/media/assets/scripts/lib/jstree.min.baba5642f663.js"&gt;&lt;/script&gt;\n&lt;script type="text/javascript" src="/media/js/jq.min.js"&gt;&lt;/script&gt;\n&lt;script type="text/javascript" src="/media/js/base.js?t=1516678381"&gt;&lt;/script&gt;\n&lt;script type="text/javascript"&gt;\nfunction ajaxErrorHandler(xhr, textStatus, errorThrown) {\n    if (xhr.responseText) {\n        feedback($.parseJSON(xhr.responseText).error||$.parseJSON(xhr.responseText).error_msg, \'error\');\n    } else {\n        feedback("Failed. Please check the network.", \'error\');\n    }\n}\n \n(function() {\n    var lang_context = $(\'#lang-context\'),\n        lang_selector = $(\'#lang-context-selector\');\n\n    lang_context.parent().css({\'position\':\'relative\'});\n\n    if ($(\'#header\').is(\':visible\')) { // for login page\n        lang_selector.css({\n            \'top\': lang_context.position().top + lang_context.height() + 5,\n            \'right\': 0\n        });\n    }\n\n    var setLangSelectorMaxHeight = function() {\n        if ($(\'#header\').is(\':visible\')) { // for login page\n            $(\'.sf-popover-con\', lang_selector).css({\n                \'max-height\': $(window).height() - lang_selector.offset().top - 12\n            });\n        }\n    };\n    $(window).resize(function() {\n        if (lang_selector.is(\':visible\')) {\n            setLangSelectorMaxHeight();\n        }\n    });\n\n    lang_context.click(function() {\n        lang_selector.toggleClass(\'hide\');\n        if (lang_selector.is(\':visible\')) {\n            setLangSelectorMaxHeight();\n        }\n        return false;\n    });\n\n    $(document).click(function(e) {\n        var element = e.target || e.srcElement;\n        if (element.id != \'lang-context-selector\' &amp;&amp; element.id != \'lang-context\') {\n            lang_selector.addClass(\'hide\');\n        }\n    });\n})();\n\n\nif ($(\'.side-nav\').length) {\n    $(\'#logo\').addClass(\'hidden-sm-down\');\n    $(\'#js-toggle-side-nav\').removeClass(\'hide\');\n}\n$(\'#js-toggle-side-nav\').click(function() {\n    $(\'.side-nav\').css({\'left\': 0});\n    return false;\n});\n$(\'.js-close-side-nav\').click(function() {\n    $(\'.side-nav\').css({\'left\': \'-300px\'});\n    return false;\n});\n$(window).resize(function() {\n    if ($(window).width() &gt;= 768) {\n        $(\'.side-nav\').css({\'left\': 0});\n    }\n});\n&lt;/script&gt;\n\n&lt;script src="../../media/js/crypto-js.js"&gt;&lt;/script&gt;\n&lt;!--&lt;script src="../../media/js/md5.js"&gt;&lt;/script&gt;--&gt;\n&lt;!--&lt;script type="text/javascript" src="http://www.osctools.net/js/CryptoJS/components/core-min.js"&gt;&lt;/script&gt;--&gt;\n&lt;!--&lt;script type="text/javascript" src="http://www.osctools.net/js/CryptoJS/rollups/md5.js"&gt;&lt;/script&gt;--&gt;\n&lt;script type="text/javascript"&gt;\n// $(\'.login-panel-outer-container\').prepend($($(\'#logo\').html()).attr({\'width\': 160, \'height\':40}).addClass(\'login-panel-logo\'));\n$(\'.login-panel-bottom-container\').append($(\'#lang\').removeClass(\'fright\'));\n\nvar $el = $(\'.login-panel-outer-container\');\nvar elHeight = $el.outerHeight();\nvar wdHeight = $(window).height();\nif (wdHeight &gt; elHeight) {\n    $el.css({\'margin-top\': (wdHeight - elHeight)/2});\n}\n$(\'#lang\').css({\'margin-left\': $(\'#sign-up\').outerWidth() + 10});\n$el.removeClass(\'vh\');\n\n$(\'#lang-context-selector\').css({\n    \'top\': \'-\' + ($(\'#lang\').offset().top - 5) + \'px\',\n    \'right\': 0\n});\n$(\'#lang-context-selector .sf-popover-con\').css({\n    \'max-height\': $(\'#lang\').offset().top - 10\n});\n\n$(\'[name="login"]\').focus();\n\n//my function\nfunction check(){\nconst key = CryptoJS.enc.Utf8.parse("1234123412ABCDEF"); \nconst iv = CryptoJS.enc.Utf8.parse(\'ABCDEF1234123412\'); \nvar password=$(\'input[name="password"]\').val();\nlet srcs = CryptoJS.enc.Utf8.parse(password);\nlet encrypted = CryptoJS.AES.encrypt(srcs, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\nvar newpass=encrypted.ciphertext.toString().toUpperCase();\n//var newpass="12121212";\n//$("#password").val(password);\n//$(\'input[type="password"]\').attr(\'value\',password);\n$(\'input[name="password"]\').val(newpass);\n//$(\'input[name="password"]\').attr(\'value\',password);\nreturn true;\n}\n\nfunction setCaptchaInputWidth() {\n    $(\'#id_captcha_1\').outerWidth($(\'.input\').outerWidth() - $(\'.captcha\').width() - $(\'#refresh-captcha\').outerWidth(true) - 10);\n}\n$(window).load(setCaptchaInputWidth);\n$(\'.captcha\').load(setCaptchaInputWidth);\n$(\'#refresh-captcha\').click(function() {\n    $.ajax({\n        url: \'/captcha/refresh/\',\n        dataType:\'json\',\n        cache:false,\n        success: function(data) {\n            $(\'.captcha\').attr(\'src\', data[\'image_url\']);\n            $(\'#id_captcha_0\').val(data[\'key\']);\n        },\n        error: function() {\n            $(\'.error\').removeClass(\'hide\').html("Failed to refresh the CAPTCHA, please try again later.");\n        }\n    });\n    return false;\n});\n\n$(\'input[type="submit"]\').click(function(){\n    if (!$.trim($(\'input[name="login"]\').val())) {\n        $(\'.error\').removeClass(\'hide\').html("Email or username cannot be blank");\n        return false;\n    }\n    if (!$.trim($(\'input[name="password"]\').val())) {\n        $(\'.error\').removeClass(\'hide\').html("Password cannot be blank");\n        return false;\n    }\n});\n// set tabindex\n$(function() {\n    $(\'input:not([type="hidden"])\').each(function(index) {\n        $(this).attr(\'tabindex\', index + 1);\n    });\n});\n\n\n\n\n\n\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n'</code></pre><p>虽然看不懂是什么， 但大概知道是没账号密码。联想到手动下载时只需要一开始登陆，那么这里request请求一定需要cookie而不是输入账号密码, 我们需要<strong>模拟保存cookie的浏览器请求</strong>。Edge浏览器打开数据集网站，按F12， 点击应用程序，左侧选择 cookie，会出现明文名称-值，用python字典将其存储，作为参数输入request。http协议还需要一个请求头(就笔者爬的这个网站来说，没有请求头也行, 读者有兴趣可以看看http协议)，完整爬取代码如下：</p><p><img src="/myblog/2021/07/05/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E9%9B%86python%E7%88%AC%E8%99%AB/cookie.jpg" alt="Edge查找网站保存的Cookie" title="Edge查找网站保存的Cookie"></p><center>Edge查找网站保存的Cookie</center>    <br><pre><code class="python">import osfrom threading import Threadimport requestsimport tqdmfrom bs4 import BeautifulSouprequests.packages.urllib3.disable_warnings()def crawler(l):    # 模拟火狐浏览器登陆    header = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64)'}    # 字典内部保存为字符串, 从浏览器开发者模式中读取    cookies = { 'XXX': 'XXX',                'XXX': 'XXX',                'XXX': 'XXX'}    for item in tqdm.tqdm(l):        dladdress = "某域名" + item['href']        source = requests.get(url=dladdress, cookies=cookies, headers=header,verify=False)#取消安全验证        name = source.headers['Content-Disposition'].split(' ')[1][1:-1] #从网站响应header中获得文件名        if source.status_code == 200:   #响应代码200 表示访问成功，http 协议规定            with open('./hyper/' + name, 'wb') as fp:                fp.write(source.content)                fp.close()if __name__ == '__main__':    with open('raw.html', encoding='utf-8') as f:  # raw.html 是浏览器手动下载下来的html文件        soup = BeautifulSoup(f,'html.parser')    l = soup.find_all(name='a', attrs={'class':'op download'})    ThreadPool = []    tasknum = 5  #设置5线程爬取数据    interval = len(l)//(tasknum) + 1 # 每个线程分配的任务数, +1代表最后一个线程分配任务数必然大于所剩任务    for i in range(tasknum):          ThreadPool.append(Thread(target=crawler, args=([l[i*interval:(i+1)*interval]]),))      # 线程池中添加一个线程    # 注意这个线程池是一个广义的概念    # 你可以用任意数据结构来实现    # 方便存入、操作线程对象即可    for p in ThreadPool:        p.start()    for p in ThreadPool:        p.join()</code></pre><p>大功告成！ Enjoy it!</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>笔者之前几乎未接触过爬虫方面，甚至网络方面知识，虽然最终代码只有几十行， 但探索的过程却是十分艰辛的，短时间内需要在众多过时爬虫文章中， 提炼出你所需要的。 我一向信奉问题驱动，虽然没有考虑各种爬虫因素(比如安全方面、反爬方面)，但简陋的代码还是帮我解决了迫切的问题，值得庆幸！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/myblog/2021/07/05/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%95%B0%E6%8D%AE%E9%9B%86</summary>
      
    
    
    
    <category term="python" scheme="https://blog.codingfxxker.club/categories/python/"/>
    
    
    <category term="爬虫" scheme="https://blog.codingfxxker.club/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>pandas 多线程数据处理</title>
    <link href="https://blog.codingfxxker.club/2021/05/19/pandas-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    <id>https://blog.codingfxxker.club/2021/05/19/pandas-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</id>
    <published>2021-05-19T01:12:19.000Z</published>
    <updated>2021-07-05T16:58:09.611Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/myblog/2021/05/19/pandas-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E7%86%8A%E7%8C%AB.jpg"><br>最近业务需要处理一批表格数据。处理过程中，成千上万条数据都需要进行i/o读写，自然而然要用到并发编程。</p><p>python并发编程主要包括以下三种：</p><ol><li><p>多进程：主要用于处理cpu密集型任务。</p></li><li><p>多线程：主要用于处理i/o密集型任务.</p></li><li><p>协程：为了解决2) 线程之间切换资源开销浪费而产生，又叫微线程， 通常和多进程配合使用， 效果奇佳。</p></li></ol><p>这里详细概念、用法不作赘述， 笔者当年学习的时候看过几篇不错的入门， 地址这里给出。</p><p><a href="https://zhuanlan.zhihu.com/p/46798399">爱coding：python并行计算（上）：multiprocessing、multiprocess模块</a></p><p><a href="https://zhuanlan.zhihu.com/p/46368084">一文看懂Python多进程与多线程编程(工作学习面试必读)</a></p><p><a href="https://zhuanlan.zhihu.com/p/64702600">一篇文章搞定Python多进程(全)</a></p><p><a href="https://zhuanlan.zhihu.com/p/70256971">【面试高频问题】线程、进程、协程</a></p><p>因为是处理i/o密集型任务，这里采用第二种并发方式(其实是笔者没玩过协程哈哈)。废话不多说， 直接上核心框架:</p><pre><code class="python">from threading import Threadimport pandas as pdclass MyThread(Thread):    def __init__(self, group=None, target=None, name=None,                 args=(), kwargs=None, *, daemon=None) -&gt; None:   #这里定义直接copy Thread类里原生定义        super().__init__(group=group, target=target,                         name=name, args=args,                         kwargs=kwargs, daemon=daemon)      def run(self) -&gt; None:        try:            if self._target:                self.result = self._target(*self._args, **self._kwargs) #与Thread类唯一不同的是， 我们用类内属性result保存每个线程结果        finally:            del self._target, self._args, self._kwargsif __name__ == '__main__':    ThreadPool = []    for i in iterator:  #伪代码， 表示一个迭代器生成多个任务        ThreadPool.append(MyThread(arget=func, args=(*args,)))      # 线程池中添加一个线程    # 注意这个线程池是一个广义的概念    # 你可以用任意数据结构来实现    # 方便存入、操作线程对象即可    for p in ThreadPool:        p.start()    for p in ThreadPool:        p.join()    df = pd.concat([p.result for p in ThreadPool]) #把所有线程处理结果合并成要一个表格</code></pre><p>这里注意__init__参数中， 有一个参数为*，这里参见前面文章<br><a href="https://zhuanlan.zhihu.com/p/372492539">Python形参中*的作用(非*args，**kwargs)</a></p><p>网上很多线程实现方案里， 都完全重写了<strong>init</strong> 和 run 方法， 把私货写进去。 笔者个人觉得， 官方库既然最原始这样写， 自然有它的道理。 我们在继承对象的时候， 要尽量少做改动， 尽量把自定义的东西(比方说任务)放在外面输入进API就可以了。下面实现一个简单的任务，使用广度优先(bfs，最大深度默认为3，要不然时间略长)统计系统(Win)各个磁盘文件路径、大小以及创建时间。</p><pre><code class="python">def func(rootpath, maxdepth=3):    df = pd.DataFrame()    filepaths = [(rootpath, 0)]  #维护一个队列， 每个路径附带一个深度值    while len(filepaths) != 0:        cur_path, cur_depth = filepaths.pop(0)        if cur_depth &gt;= maxdepth:  #深度达到最大深度停止搜索            idx = len(df)              df.loc[idx, 'path'] = os.path.join(cur_path)  #记录路径            df.loc[idx, 'date'] = os.path.getctime(cur_path)  #记录时间            df.loc[idx, 'size'] = os.path.getsize(cur_path)  #记录文件大小        else:            try:  #这个纯粹是因为Win系统有些路径不让访问报OSError， 哪怕开了管理员权限                subfiles = os.listdir(cur_path)                for f in subfiles:                    subfpath = os.path.join(cur_path, f)                    if os.path.isdir(subfpath):                        filepaths.append((subfpath, cur_depth+1))  #如果是文件夹, 继续bfs搜索                    else:                        idx = len(df)                        df.loc[idx, 'path'] = os.path.join(subfpath)                        df.loc[idx, 'date'] = os.path.getctime(subfpath)                        df.loc[idx, 'size'] = os.path.getsize(subfpath)            except OSError:                pass    return df</code></pre><p>下面上完整代码：</p><pre><code class="python"># -*- coding: utf-8 -*- import datetimeimport osimport timefrom threading import Threadimport pandas as pddef func(rootpath, maxdepth=3):    df = pd.DataFrame()    filepaths = [(rootpath, 0)]  #维护一个队列， 每个路径附带一个深度值    while len(filepaths) != 0:        cur_path, cur_depth = filepaths.pop(0)        if cur_depth &gt;= maxdepth:  #深度达到最大深度停止搜索            idx = len(df)              df.loc[idx, 'path'] = os.path.join(cur_path)  #记录路径            df.loc[idx, 'date'] = os.path.getctime(cur_path)  #记录时间            df.loc[idx, 'size'] = os.path.getsize(cur_path)  #记录文件大小        else:            try:  #这个纯粹是因为Win系统有些路径不让访问报OSError， 哪怕开了管理员权限                subfiles = os.listdir(cur_path)                for f in subfiles:                    subfpath = os.path.join(cur_path, f)                    if os.path.isdir(subfpath):                        filepaths.append((subfpath, cur_depth+1))  #如果是文件夹, 继续bfs搜索                    else:                        idx = len(df)                        df.loc[idx, 'path'] = os.path.join(subfpath)                        df.loc[idx, 'date'] = os.path.getctime(subfpath)                        df.loc[idx, 'size'] = os.path.getsize(subfpath)            except OSError:                pass    return dfclass MyThread(Thread):    def __init__(self, group=None, target=None, name=None,                 args=(), kwargs=None, *, daemon=None) -&gt; None:   #这里定义直接copy Thread类里原生定义        super().__init__(group=group, target=target,                         name=name, args=args,                         kwargs=kwargs, daemon=daemon)      def run(self) -&gt; None:        try:            if self._target:                self.result = self._target(*self._args, **self._kwargs) #与Thread类唯一不同的是， 我们用类内属性result保存每个线程结果        finally:            del self._target, self._args, self._kwargsif __name__ == '__main__':    ThreadPool = []    ThreadPool.append(MyThread(target=func, args=('c:/', 3)))    ThreadPool.append(MyThread(target=func, args=('d:/', 3)))    ThreadPool.append(MyThread(target=func, args=('e:/', 3)))    for p in ThreadPool:        p.start()    for p in ThreadPool:        p.join()    df = pd.concat([p.result for p in ThreadPool])    df.to_csv('thread.csv', index=None)</code></pre><p>收工！</p><hr><p>码痴， coding 改变人生！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/myblog/2021/05/19/pandas-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/%E7%86%8A%E7%8C%AB.jpg&quot;&gt;&lt;br&gt;最近业务需要处理一</summary>
      
    
    
    
    <category term="python" scheme="https://blog.codingfxxker.club/categories/python/"/>
    
    
    <category term="pandas 多线程" scheme="https://blog.codingfxxker.club/tags/pandas-%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python形参中*的作用(非*args**kwargs)</title>
    <link href="https://blog.codingfxxker.club/2021/05/19/Python%E5%BD%A2%E5%8F%82%E4%B8%AD-%E7%9A%84%E4%BD%9C%E7%94%A8-%E9%9D%9E-args-kwargs/"/>
    <id>https://blog.codingfxxker.club/2021/05/19/Python%E5%BD%A2%E5%8F%82%E4%B8%AD-%E7%9A%84%E4%BD%9C%E7%94%A8-%E9%9D%9E-args-kwargs/</id>
    <published>2021-05-19T00:44:51.000Z</published>
    <updated>2021-07-05T17:00:12.261Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/myblog/2021/05/19/Python%E5%BD%A2%E5%8F%82%E4%B8%AD-%E7%9A%84%E4%BD%9C%E7%94%A8-%E9%9D%9E-args-kwargs/py.jpg"><br>因业务需求， 阅读了python多线程库threading源码。发现__init__函数是这样定义的</p><pre><code class="python">class Thread:    def __init__(self, group=None, target=None, name=None,                 args=(), kwargs=None, *, daemon=None):</code></pre><p>其中 * 瞬间打开了我新世界大门，因为按理说python不支持特殊字符作为变量名。</p><p>所有中文搜索引擎没有发现相关解释。 不得已去 栈溢出 网站看看外国大佬怎么说， 很幸运找到了解释。</p><p>根据PEP3102，* 的基本意义为， 在这个位置之后的参数必须用关键字参数(keyword arguement)作为输入。 其作用有两个:</p><h2 id="1-省略关键字参数的默认值"><a href="#1-省略关键字参数的默认值" class="headerlink" title="1) 省略关键字参数的默认值"></a>1) 省略关键字参数的默认值</h2><p>请看下面的简单例子</p><pre><code class="python">def func(arg1, arg2, *, arg3, arg4):    print('This is arg1: ' + arg1)    print('This is arg2: ' + arg2)    print('This is arg3: ' + arg3)    print('This is arg4: ' + arg4)func('arg1', 'arg2', 'arg3', 'arg4')</code></pre><p>返回</p><pre><code>Exception has occurred: TypeErrorfunc() takes 2 positional arguments but 4 were given</code></pre><p>这里是说func只需要2个位置参数(position arguements), 但是接到了4个。修改代码如下:</p><pre><code class="python">def func(arg1, arg2, *, arg3, arg4):    print('This is arg1: ' + arg1)    print('This is arg2: ' + arg2)    print('This is arg3: ' + arg3)    print('This is arg4: ' + arg4)func('arg1', 'arg2', arg3='arg3', arg4='arg4')</code></pre><p>返回</p><pre><code class="markdown">This is arg1: arg1This is arg2: arg2This is arg3: arg3This is arg4: arg4</code></pre><p>再来看看arg3， arg4 有没有关键字参数的打包解包(pack-unpack)性质</p><pre><code class="python">def func(arg1, arg2, *, arg3, arg4):    print('This is arg1: ' + arg1)    print('This is arg2: ' + arg2)    print('This is arg3: ' + arg3)    print('This is arg4: ' + arg4)kwarg = {'arg3':'arg3', 'arg4':'arg4'}func('arg1', 'arg2', **kwarg)</code></pre><p>返回</p><pre><code class="markdown">This is arg1: arg1This is arg2: arg2This is arg3: arg3This is arg4: arg4</code></pre><p>证明 arg3， arg4 确实是可以不赋默认值的关键字参数。下面来看第二个作用。</p><h2 id="2-避免-位置参数-和-关键字参数混用"><a href="#2-避免-位置参数-和-关键字参数混用" class="headerlink" title="2) 避免 位置参数 和 关键字参数混用"></a>2) 避免 位置参数 和 关键字参数混用</h2><p>有时候我们输入位置参数时， 会不小心多打， 导致关键字参数被输入错。</p><pre><code class="python">def func(arg1, arg2, arg3, arg4=False):    print('This is arg1: ' + arg1)    print('This is arg2: ' + arg2)    print('This is arg3: ' + arg3)    print('This is arg4: ' + arg4)func('arg1', 'arg2', 'arg3', 'arg3')</code></pre><p>返回</p><pre><code class="markdown">This is arg1: arg1This is arg2: arg2This is arg3: arg3This is arg4: arg3</code></pre><p>可以看到， 由于我们多输入了一个 ‘arg3’, 导致arg4接到了错误参数。修改代码如下：</p><pre><code class="python">def func(arg1, arg2, arg3, *, arg4=False):    print('This is arg1: ' + arg1)    print('This is arg2: ' + arg2)    print('This is arg3: ' + arg3)    print('This is arg4: ' + arg4)func('arg1', 'arg2', 'arg3', 'arg3')</code></pre><p>返回</p><pre><code class="markdown">func() takes 3 positional arguments but 4 were given</code></pre><p>有效防止了我们输入错误。</p><p>回到刚开始python threading 多线程库的问题,</p><pre><code class="python">class Thread:    def __init__(self, group=None, target=None, name=None,                 args=(), kwargs=None, *, daemon=None):</code></pre><p>这里声明了 daemon 一定要用关键字参数输入, 说明开发者认为这个参数十分重要。事实上， 这个daemon意思是守护线程的意思，和阻塞线程正好是两个相反的逻辑顺序。 本文不做深入讲解， 读者只需要知道这里daemon设置为True， False， 或者保持默认参数，会导致这个线程出现三个完全不同的运行状态， 因而要使用*来提醒用户避免输错。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li>[1] <a href="https://stackoverflow.com/questions/11365909/what-does-a-single-without-identifier-mean-in-the-python3-functions">What does a single * without identifier mean in the Python3 functions?</a></li><li>[2] <a href="https://www.python.org/dev/peps/pep-3102/">PEP 3102 – Keyword-Only Arguments</a></li><li>[3] <a href="https://stackoverflow.com/questions/59661042/what-do-single-star-and-slash-do-as-independent-parameters">What do * (single star) and / (slash) do as independent parameters?</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/myblog/2021/05/19/Python%E5%BD%A2%E5%8F%82%E4%B8%AD-%E7%9A%84%E4%BD%9C%E7%94%A8-%E9%9D%9E-args-kwargs/py.jpg&quot;&gt;&lt;br&gt;因业务需求， 阅读了py</summary>
      
    
    
    
    <category term="python" scheme="https://blog.codingfxxker.club/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>SSH 隧道端口转发实现Jupyter Notebook远程访问服务器</title>
    <link href="https://blog.codingfxxker.club/2021/05/18/SSH-%E9%9A%A7%E9%81%93%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E5%AE%9E%E7%8E%B0Jupyter-Notebook%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://blog.codingfxxker.club/2021/05/18/SSH-%E9%9A%A7%E9%81%93%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E5%AE%9E%E7%8E%B0Jupyter-Notebook%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2021-05-18T15:16:13.000Z</published>
    <updated>2021-07-05T16:54:40.828Z</updated>
    
    <content type="html"><![CDATA[<p>Jupyter Notebook 在广大python用户，尤其是数据科学工作者中深受喜爱。其方便的交互性， 可视性特别适合数据分析。虽然笔者已经多年不以其作为主力python编辑环境，但实验室还是有人(数学背景出身，貌似搞数学的pythoner都特别喜欢jupyter)对其十分青睐。 身为实验室服务器运维的笔者， 自然要负责配置好jupyeter远程访问。网上所有的教程(包括官网)都千篇一律需要修改服务器本地jupyter_notebook_config.py, 而且绝大多数教程并没有按照官网建议的配置安全证书。笔者曾经历经千辛万苦配成功过，但踩坑无数，这里不再赘述。 偶然一次机会发现 ssh 隧道端口转发协议， 遂产生idea使用它来实现远程访问服务器。</p><p>&nbsp;</p><h2 id="一、SSH-隧道端口转发简介"><a href="#一、SSH-隧道端口转发简介" class="headerlink" title="一、SSH 隧道端口转发简介"></a>一、SSH 隧道端口转发简介</h2><p>SSH隧道的特点：</p><p>1、加密SSH客户端端至SSH服务器端之间的通讯数据</p><p>2、突破防火墙的限制完成一些之前无法建立的TCP连接</p><p>在本文应用场景下，简而言之就是jupyter notebook 在服务器终端启动时，会在服务器本地产生一个服务。我们需要做的就是通过 ssh 隧道转发协议，将服务器 jupyter 服务端口转发至我们本地机器上的端口， 从而进行远程访问。SSH 端口转发有三个选项：-L、-R和-D。这里我们用-L，即将远程(L)主机端口转发本地。</p><p>&nbsp;</p><h2 id="二、上机操作"><a href="#二、上机操作" class="headerlink" title="二、上机操作"></a>二、上机操作</h2><p>Linux OS：Ubuntu18.04</p><p>打开本地终端登录服务器，进入要使用的python环境(conda activate env)，输入  </p><pre><code>jupyter notebook --port=20000</code></pre><p>这里20000为远程端口， 读者可自定义。 返回如下(隐去真实路径信息)  </p><pre><code>(base) MatrixMan@server:~$ jupyter notebook --port=20000[I 19:56:22.007 NotebookApp] JupyterLab extension loaded from /your/path/to/anaconda3/lib/python3.8/site-packages/jupyterlab[I 19:56:22.007 NotebookApp] JupyterLab application directory is /your/path/to/anaconda3/share/jupyter/lab[I 19:56:22.011 NotebookApp] 启动notebooks 在本地路径: /your/path/to/boot[I 19:56:22.011 NotebookApp] 本程序运行在: http://iiplab-server:20000/[I 19:56:22.011 NotebookApp] 使用control-c停止此服务器并关闭所有内核(两次跳过确认).</code></pre><p>打开另一个终端(也可以使用nohup命令将jupyter挂在系统后台，就不用打开第二个终端)， 输入(隐去真实地址)  </p><pre><code>ssh -L localhost:2000:localhost:20000 MatrixMan@143.111.56.87</code></pre><p>如果配置过ssh 免密登录的话，此时已经可以在本地访问了。</p><p>打开浏览器， 输入</p><pre><code>http://localhost:2000/</code></pre><p><img src="/myblog/2021/05/18/SSH-%E9%9A%A7%E9%81%93%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E5%AE%9E%E7%8E%B0Jupyter-Notebook%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%E5%99%A8/f1.jpg" alt="效果图"></p><p>搞定！！！</p><hr><p>欢迎提出反馈意见， 批评指正.<br>矩阵侠， 分享工作学习中所见所闻， 欢迎交流！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Jupyter Notebook 在广大python用户，尤其是数据科学工作者中深受喜爱。其方便的交互性， 可视性特别适合数据分析。虽然笔者已经多年不以其作为主力python编辑环境，但实验室还是有人(数学背景出身，貌似搞数学的pythoner都特别喜欢jupyter)对其</summary>
      
    
    
    
    <category term="服务器运维" scheme="https://blog.codingfxxker.club/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="jupyter" scheme="https://blog.codingfxxker.club/tags/jupyter/"/>
    
  </entry>
  
</feed>
